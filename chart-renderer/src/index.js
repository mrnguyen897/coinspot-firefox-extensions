const express = require("express")
const { ChartJSNodeCanvas  } = require('chartjs-node-canvas');
let app = express()
const moment = require('moment')
const data = [[1613801100000,1.35783055],[1613801400000,1.3645609],[1613801700000,1.36729133],[1613802000000,1.36152021],[1613802300000,1.36104838],[1613802600000,1.36707147],[1613802900000,1.36508513],[1613803200000,1.36548658],[1613803500000,1.3582817],[1613803800000,1.35444034],[1613804100000,1.35667159],[1613804400000,1.35268121],[1613804700000,1.35640966],[1613805000000,1.35220538],[1613805300000,1.34138044],[1613805600000,1.34521663],[1613805900000,1.33946601],[1613806200000,1.34715015],[1613806500000,1.3394872],[1613806800000,1.33263941],[1613807100000,1.3193375],[1613807400000,1.32385899],[1613807700000,1.32965096],[1613808000000,1.30755449],[1613808300000,1.3324895],[1613808600000,1.34137546],[1613808900000,1.34081269],[1613809200000,1.34283015],[1613809500000,1.34303545],[1613809800000,1.34829453],[1613810100000,1.33931047],[1613810400000,1.34055083],[1613810700000,1.33654138],[1613811000000,1.32895665],[1613811300000,1.32512373],[1613811600000,1.32251751],[1613811900000,1.32801379],[1613812200000,1.32666061],[1613812500000,1.31879352],[1613812800000,1.33104696],[1613813100000,1.3387188],[1613813400000,1.33833066],[1613813700000,1.34439836],[1613814000000,1.34550673],[1613814300000,1.34534847],[1613814600000,1.34270365],[1613814900000,1.33670941],[1613815200000,1.33632501],[1613815500000,1.34484386],[1613815800000,1.34918451],[1613816100000,1.35177359],[1613816400000,1.3510515],[1613816700000,1.34637232],[1613817000000,1.34794739],[1613817300000,1.35870344],[1613817600000,1.36836153],[1613817900000,1.36325065],[1613818200000,1.36569794],[1613818500000,1.35907906],[1613818800000,1.36062841],[1613819100000,1.35059277],[1613819400000,1.35546246],[1613819700000,1.35311773],[1613820000000,1.35375257],[1613820300000,1.35407827],[1613820600000,1.35825072],[1613820900000,1.35283454],[1613821200000,1.3521879],[1613821500000,1.35626437],[1613821800000,1.35396029],[1613822100000,1.34499827],[1613822400000,1.35153982],[1613822700000,1.35344089],[1613823000000,1.35877711],[1613823300000,1.35107516],[1613823600000,1.34698825],[1613823900000,1.34787966],[1613824200000,1.34764145],[1613824500000,1.35878146],[1613824800000,1.35930178],[1613825100000,1.35462933],[1613825400000,1.3627722],[1613825700000,1.36115413],[1613826000000,1.36147215],[1613826300000,1.36362371],[1613826600000,1.3776862],[1613826900000,1.39516758],[1613827200000,1.38840028],[1613827500000,1.37989728],[1613827800000,1.38752285],[1613828100000,1.40823155],[1613828400000,1.42657441],[1613828700000,1.44488036],[1613829000000,1.46397065],[1613829300000,1.4450429],[1613829600000,1.43290134],[1613829900000,1.44783633],[1613830200000,1.4374511],[1613830500000,1.44458637],[1613830800000,1.43048452],[1613831100000,1.42420712],[1613831400000,1.41688535],[1613831700000,1.42923028],[1613832000000,1.43058623],[1613832300000,1.43232236],[1613832600000,1.41843527],[1613832900000,1.39108508],[1613833200000,1.38060239],[1613833500000,1.40849447],[1613833800000,1.41213905],[1613834100000,1.40895998],[1613834400000,1.39419571],[1613834700000,1.37663688],[1613835000000,1.37019107],[1613835300000,1.38371101],[1613835600000,1.37057605],[1613835900000,1.36367954],[1613836200000,1.38385902],[1613836500000,1.38649922],[1613836800000,1.38627092],[1613837100000,1.41462971],[1613837400000,1.41796567],[1613837700000,1.43018382],[1613838000000,1.42087901],[1613838300000,1.4163258],[1613838600000,1.41841695],[1613838900000,1.43854989],[1613839200000,1.45316837],[1613839500000,1.4413213],[1613839800000,1.44357717],[1613840100000,1.44354875],[1613840400000,1.44209318],[1613840700000,1.42916869],[1613841000000,1.43971313],[1613841300000,1.45326035],[1613841600000,1.45484077],[1613841900000,1.46742761],[1613842200000,1.47483196],[1613842500000,1.48801316],[1613842800000,1.50211478],[1613843100000,1.48132038],[1613843400000,1.480913],[1613843700000,1.46876064],[1613844000000,1.47437103],[1613844300000,1.47495229],[1613844600000,1.48590374],[1613844900000,1.4774352],[1613845200000,1.47118792],[1613845500000,1.46210409],[1613845800000,1.46616211],[1613846100000,1.47252583],[1613846400000,1.46612072],[1613846700000,1.45943825],[1613847000000,1.46213763],[1613847300000,1.46898642],[1613847600000,1.4708756],[1613847900000,1.47944532],[1613848200000,1.47408615],[1613848500000,1.4768633],[1613848800000,1.46046025],[1613849100000,1.4620696],[1613849400000,1.4569028],[1613849700000,1.45890828],[1613850000000,1.4566037],[1613850300000,1.4570087],[1613850600000,1.46749808],[1613850900000,1.46103999],[1613851200000,1.46779683],[1613851500000,1.44837966],[1613851800000,1.44461028],[1613852100000,1.44471503],[1613852400000,1.44450552],[1613852700000,1.4536684],[1613853000000,1.46239029],[1613853300000,1.47172464],[1613853600000,1.47648858],[1613853900000,1.47350647],[1613854200000,1.47465541],[1613854500000,1.48954099],[1613854800000,1.48896748],[1613855100000,1.47238145],[1613855400000,1.47083042],[1613855700000,1.46338236],[1613856000000,1.45489662],[1613856300000,1.44780602],[1613856600000,1.45735573],[1613856900000,1.46938983],[1613857200000,1.47162877],[1613857500000,1.47815251],[1613857800000,1.47791319],[1613858100000,1.47439529],[1613858400000,1.46591472],[1613858700000,1.46870618],[1613859000000,1.46847338],[1613859300000,1.48236404],[1613859600000,1.49225016],[1613859900000,1.50558093],[1613860200000,1.52325543],[1613860500000,1.48248975],[1613860800000,1.45830867],[1613861100000,1.38782019],[1613861400000,1.42957733],[1613861700000,1.47683603],[1613862000000,1.45267466],[1613862300000,1.44269412],[1613862600000,1.42123089],[1613862900000,1.44108902],[1613863200000,1.42381731],[1613863500000,1.44323288],[1613863800000,1.42490565],[1613864100000,1.41085248],[1613864400000,1.40381097],[1613864700000,1.40051744],[1613865000000,1.42414372],[1613865300000,1.4322858],[1613865600000,1.42595109],[1613865900000,1.40026466],[1613866200000,1.40634082],[1613866500000,1.39763469],[1613866800000,1.40550647],[1613867100000,1.42261589],[1613867400000,1.42799099],[1613867700000,1.45037562],[1613868000000,1.44150451],[1613868300000,1.44571729],[1613868600000,1.42874282],[1613868900000,1.42791828],[1613869200000,1.43432896],[1613869500000,1.42749469],[1613869800000,1.43808394],[1613870100000,1.42357717],[1613870400000,1.4073985],[1613870700000,1.40259029],[1613871000000,1.40420513],[1613871300000,1.4112485],[1613871600000,1.40411896],[1613871900000,1.41462103],[1613872200000,1.41713832],[1613872500000,1.42653162],[1613872800000,1.43109852],[1613873100000,1.43490269],[1613873400000,1.44338983],[1613873700000,1.44766636],[1613874000000,1.44437611],[1613874300000,1.45279699],[1613874600000,1.45119247],[1613874900000,1.44150901],[1613875200000,1.43819041],[1613875500000,1.43961281],[1613875800000,1.44784006],[1613876100000,1.4360798],[1613876400000,1.43377976],[1613876700000,1.43123305],[1613877000000,1.44174944],[1613877300000,1.45292634],[1613877600000,1.44407658],[1613877900000,1.44051861],[1613878200000,1.4404171],[1613878500000,1.4371792],[1613878800000,1.42748944],[1613879100000,1.42393636],[1613879400000,1.41809328],[1613879700000,1.40693094],[1613880000000,1.41188411],[1613880300000,1.4046228],[1613880600000,1.40090657],[1613880900000,1.40546452],[1613881200000,1.40486299],[1613881500000,1.39828872],[1613881800000,1.38967948],[1613882100000,1.38947022],[1613882400000,1.40608155],[1613882700000,1.40140201],[1613883000000,1.39194521],[1613883300000,1.41345788],[1613883600000,1.41698422],[1613883900000,1.41316201],[1613884200000,1.40670125],[1613884500000,1.41864144],[1613884800000,1.41390186],[1613885100000,1.41500115],[1613885400000,1.41795496],[1613885700000,1.41887985],[1613886000000,1.42603452],[1613886300000,1.42779195],[1613886600000,1.4433445],[1613886900000,1.43201191],[1613887200000,1.43778069],[1613887500000,1.43728817],[1613887800000,1.4402159],[1613888100000,1.42832682],[1613888400000,1.42187005],[1613888700000,1.42226029],[1613889000000,1.42650704],[1613889221881,1.42068228]]

var configuration = {
    type: 'line',
     data: {
        datasets: [{
            label: 'CHRT - Chart.js Corporation',
           // backgroundColor: color(window.chartColors.red).alpha(0.5).rgbString(),
            //borderColor: window.chartColors.red,
            data: data.map(([t,y]) => ({t, y})),
            type: 'line',
            pointRadius: 0,
            fill: false,
            lineTension: 0,
            borderWidth: 2
        }]
    },
    options: {
        animation: {
            duration: 0
        },
        scales: {
            xAxes: [{
                type: 'time',
                distribution: 'series',
                offset: true,
                ticks: {
                    major: {
                        enabled: true,
                        fontStyle: 'bold'
                    },
                    source: 'data',
                    autoSkip: true,
                    autoSkipPadding: 75,
                    maxRotation: 0,
                    sampleSize: 100,
                },
                afterBuildTicks: function(scale, ticks) {
                    var majorUnit = scale._majorUnit;
                    var firstTick = ticks[0];
                    var i, ilen, val, tick, currMajor, lastMajor;

                    val = moment(ticks[0].value);
                    if ((majorUnit === 'minute' && val.second() === 0)
                            || (majorUnit === 'hour' && val.minute() === 0)
                            || (majorUnit === 'day' && val.hour() === 9)
                            || (majorUnit === 'month' && val.date() <= 3 && val.isoWeekday() === 1)
                            || (majorUnit === 'year' && val.month() === 0)) {
                        firstTick.major = true;
                    } else {
                        firstTick.major = false;
                    }
                    lastMajor = val.get(majorUnit);

                    for (i = 1, ilen = ticks.length; i < ilen; i++) {
                        tick = ticks[i];
                        val = moment(tick.value);
                        currMajor = val.get(majorUnit);
                        tick.major = currMajor !== lastMajor;
                        lastMajor = currMajor;
                    }
                    return ticks;
                }
            }],
            yAxes: [{
                gridLines: {
                    drawBorder: false
                },
                scaleLabel: {
                    display: false,
                    labelString: 'Closing price ($)'
                }
            }]
        },
        tooltips: {
            intersect: false,
            mode: 'index',
            callbacks: {
                label: function(tooltipItem, myData) {
                    var label = myData.datasets[tooltipItem.datasetIndex].label || '';
                    if (label) {
                        label += ': ';
                    }
                    label += parseFloat(tooltipItem.value).toFixed(2);
                    return label;
                }
            }
        }
    }
}


const mkChart = async (params) => {
    const canvasRenderService = new ChartJSNodeCanvas ({width: 1000, height: 400})
    return await canvasRenderService.renderToBuffer(configuration);
}

app.get('/chart', async function (req, res) {
    var image = await mkChart(req.query)
    res.type("image/png")
    res.send(image) 
})

app.listen(3061, () => {
    console.log('server is running.....')
})